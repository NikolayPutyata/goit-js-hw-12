import{a as y,S as g,i as a}from"./assets/vendor-b11e2a50.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))p(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&p(d)}).observe(document,{childList:!0,subtree:!0});function o(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function p(e){if(e.ep)return;e.ep=!0;const s=o(e);fetch(e.href,s)}})();function m(r){return y.get("https://pixabay.com/api",r).then(t=>t.data).catch(t=>{throw t})}function f(r){const t=document.querySelector(".gallery"),o=r.map(e=>`<li class="item-ul">
  <a href="${e.largeImageURL}"><img src="${e.webformatURL}" alt="${e.tags}" /></a>
  <div class="about-img-div">
    <p class="description-img">Likes</p>
    <p class="description-img">Views</p>
    <p class="description-img">Comments</p>
    <p class="description-img">Downloads</p>
    <span class="description-value">${e.likes}</span>
    <span class="description-value">${e.views}</span>
    <span class="description-value">${e.comments}</span>
    <span class="description-value">${e.downloads}</span>
  </div>
</li>`).join("");t.insertAdjacentHTML("beforeend",o),new g(".gallery li a",{captions:!0,captionsData:"alt",captionPosition:"bottom",captionDelay:250}).refresh()}const u=document.querySelector(".form"),i=document.querySelector(".loader"),h=document.querySelector(".gallery"),l=document.querySelector(".load-more-button");let c=1,n="";u.addEventListener("submit",b);l.addEventListener("click",v);function b(r){r.preventDefault(),n=u.elements[0].value.trim(),c=1,h.innerHTML="",n===""||n.length<2?a.error({title:"",message:"The input field is empty or has less than two characters!"}):(i.style.display="block",m({params:{key:"45056360-0d73312e4ecad0bc63c18ca30",q:n,image_type:"photo",orientation:"horizontal",safesearch:!0,page:c,per_page:15}}).then(o=>{i.style.display="none",o.hits.length===0?(a.error({title:"",message:"No pictures found! Try again!"}),l.style.display="none"):(f(o.hits),l.style.display="block")}).catch(o=>{i.style.display="none",a.error({title:"",message:`Error fetching images: ${o.message||o}`})}).finally(()=>u.reset()))}function v(){i.style.display="block",c+=1,m({params:{key:"45056360-0d73312e4ecad0bc63c18ca30",q:n,image_type:"photo",orientation:"horizontal",safesearch:!0,page:c,per_page:15}}).then(t=>{i.style.display="none",t.hits.length===0?(l.style.display="none",a.info({title:"",message:"No more pictures found!"})):f(t.hits)}).catch(t=>{i.style.display="none",a.error({title:"",message:`Error fetching images: ${t.message||t}`})})}
//# sourceMappingURL=commonHelpers.js.map
